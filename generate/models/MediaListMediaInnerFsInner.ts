/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { GroupedMediaListItem } from './GroupedMediaListItem.js';
import {
    GroupedMediaListItemFromJSON,
    GroupedMediaListItemFromJSONTyped,
    GroupedMediaListItemToJSON,
} from './GroupedMediaListItem.js';
import type { SingleMediaListItem } from './SingleMediaListItem.js';
import {
    SingleMediaListItemFromJSON,
    SingleMediaListItemFromJSONTyped,
    SingleMediaListItemToJSON,
} from './SingleMediaListItem.js';

/**
 * 
 * @export
 * @interface MediaListMediaInnerFsInner
 */
export interface MediaListMediaInnerFsInner {
    /**
     * Creation time in seconds since epoch
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    cre: any | null;
    /**
     * Low resolution video size
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    glrv?: any | null;
    /**
     * Low resolution file size. -1 if there is no LRV file
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    ls?: any | null;
    /**
     * Time file was last modified in seconds since epoch
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    mod: any | null;
    /**
     * Media filename
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    n: any | null;
    /**
     * Number of files in the group
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    s: any | null;
    /**
     * ID of first member in the group
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    b: any | null;
    /**
     * Group Identifier
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    g: any | null;
    /**
     * Media list session identifier
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    id?: any | null;
    /**
     * ID of last member in the group
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    l: any | null;
    /**
     * File ID's that are missing or deleted
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    m: any | null;
    /**
     * Group Type (b -> burst, c -> continuous shot, n -> night lapse, t -> time lapse)
     * @type {any}
     * @memberof MediaListMediaInnerFsInner
     */
    t: MediaListMediaInnerFsInnerTEnum | null;
}


/**
 * @export
 */
export const MediaListMediaInnerFsInnerTEnum = {
    B: 'b',
    C: 'c',
    N: 'n',
    T: 't'
} as const;
export type MediaListMediaInnerFsInnerTEnum = typeof MediaListMediaInnerFsInnerTEnum[keyof typeof MediaListMediaInnerFsInnerTEnum];


/**
 * Check if a given object implements the MediaListMediaInnerFsInner interface.
 */
export function instanceOfMediaListMediaInnerFsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cre" in value;
    isInstance = isInstance && "mod" in value;
    isInstance = isInstance && "n" in value;
    isInstance = isInstance && "s" in value;
    isInstance = isInstance && "b" in value;
    isInstance = isInstance && "g" in value;
    isInstance = isInstance && "l" in value;
    isInstance = isInstance && "m" in value;
    isInstance = isInstance && "t" in value;

    return isInstance;
}

export function MediaListMediaInnerFsInnerFromJSON(json: any): MediaListMediaInnerFsInner {
    return MediaListMediaInnerFsInnerFromJSONTyped(json, false);
}

export function MediaListMediaInnerFsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaListMediaInnerFsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cre': json['cre'],
        'glrv': !exists(json, 'glrv') ? undefined : json['glrv'],
        'ls': !exists(json, 'ls') ? undefined : json['ls'],
        'mod': json['mod'],
        'n': json['n'],
        's': json['s'],
        'b': json['b'],
        'g': json['g'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'l': json['l'],
        'm': json['m'],
        't': json['t'],
    };
}

export function MediaListMediaInnerFsInnerToJSON(value?: MediaListMediaInnerFsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cre': value.cre,
        'glrv': value.glrv,
        'ls': value.ls,
        'mod': value.mod,
        'n': value.n,
        's': value.s,
        'b': value.b,
        'g': value.g,
        'id': value.id,
        'l': value.l,
        'm': value.m,
        't': value.t,
    };
}

