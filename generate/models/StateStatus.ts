/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * All currently known status values indexed by status ID
 * @export
 * @interface StateStatus
 */
export interface StateStatus {
    /**
     * **Is the system's internal battery present?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _1?: StateStatus_1Enum;
    /**
     * **Rough approximation of internal battery level in bars**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Zero |
     * | 1 | One |
     * | 2 | Two |
     * | 3 | Three |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _2?: StateStatus_2Enum;
    /**
     * **Is the system currently overheating?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _6?: StateStatus_6Enum;
    /**
     * **Is the camera busy?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _8?: StateStatus_8Enum;
    /**
     * **Is Quick Capture feature enabled?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _9?: StateStatus_9Enum;
    /**
     * **Is the system encoding right now?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _10?: StateStatus_10Enum;
    /**
     * **Is LCD lock active?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _11?: StateStatus_11Enum;
    /**
     * **When encoding video, this is the duration (seconds) of the video so far; 0 otherwise**
     * 
     * 
     *  
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _13?: number;
    /**
     * **Are Wireless Connections enabled?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _17?: StateStatus_17Enum;
    /**
     * **The pairing state of the camera**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Never Started |
     * | 1 | Started |
     * | 2 | Aborted |
     * | 3 | Cancelled |
     * | 4 | Completed |
     * 
     * 
     * Supported Cameras:
     *  
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _19?: StateStatus_19Enum;
    /**
     * **The last type of pairing that the camera was engaged in**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Not Pairing |
     * | 1 | Pairing App |
     * | 2 | Pairing Remote Control |
     * | 3 | Pairing Bluetooth Device |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     *  - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _20?: StateStatus_20Enum;
    /**
     * **Time (milliseconds) since boot of last successful pairing complete action**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _21?: number;
    /**
     * **State of current scan for WiFi Access Points. Appears to only change for CAH-related scans**
     *  
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Never started |
     * | 1 | Started |
     * | 2 | Aborted |
     * | 3 | Canceled |
     * | 4 | Completed |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _22?: StateStatus_22Enum;
    /**
     * **The time, in milliseconds since boot that the WiFi Access Point scan completed**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _23?: number;
    /**
     * **WiFi AP provisioning state**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Never started |
     * | 1 | Started |
     * | 2 | Aborted |
     * | 3 | Canceled |
     * | 4 | Completed |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _24?: StateStatus_24Enum;
    /**
     * **Wireless remote control version**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _26?: number;
    /**
     * **Is a wireless remote control connected?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _27?: StateStatus_27Enum;
    /**
     * **Wireless Pairing State. Each bit contains state information (see WirelessPairingStateFlags)**
     *  
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _28?: number;
    /**
     * **Provisioned WIFI AP SSID. On BLE connection, value is big-endian byte-encoded int**
     * 
     * 
     * 
     *  Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {string}
     * @memberof StateStatus
     */
    _29?: string;
    /**
     * **Camera's WIFI SSID. On BLE connection, value is big-endian byte-encoded int**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {string}
     * @memberof StateStatus
     */
    _30?: string;
    /**
     * **The number of wireless devices connected to the camera**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _31?: number;
    /**
     * **Is Preview Stream enabled?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _32?: StateStatus_32Enum;
    /**
     * **Primary Storage Status**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | -1 | Unknown |
     * | 0 | OK |
     * | 1 | SD Card Full |
     * | 2 | SD Card Removed |
     * | 3 | SD Card Format Error |
     * | 4 | SD Card Busy |
     * | 8 | SD Card Swapped |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     *  - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _33?: StateStatus_33Enum;
    /**
     * **How many photos can be taken before sdcard is full**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _34?: number;
    /**
     * **How many minutes of video can be captured with current settings before sdcard is full**
     * 
     * 
     *  
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _35?: number;
    /**
     * **Total number of photos on sdcard**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _38?: number;
    /**
     * **Total number of videos on sdcard**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _39?: number;
    /**
     * **The current status of Over The Air (OTA) update**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Idle |
     * | 1 | Downloading |
     * | 2 | Verifying |
     * | 3 | Download Failed |
     * | 4 | Verify Failed |
     *  | 5 | Ready |
     * | 6 | GoPro App: Downloading |
     * | 7 | GoPro App: Verifying |
     * | 8 | GoPro App: Download Failed |
     * | 9 | GoPro App: Verify Failed |
     * | 10 | GoPro App: Ready |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _41?: StateStatus_41Enum;
    /**
     * **Is there a pending request to cancel a firmware update download?**
     * 
     * 
     * 
     * Supported Cameras:
     *  
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _42?: StateStatus_42Enum;
    /**
     * **Is locate camera feature active?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _45?: StateStatus_45Enum;
    /**
     * **The current timelapse interval countdown value (e.g. 5...4...3...2...1...)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _49?: number;
    /**
     * **Remaining space on the sdcard in Kilobytes**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _54?: number;
    /**
     * **Is preview stream supported in current recording/mode/secondary-stream?**
     * 
     * 
     * 
     * Supported Cameras:
     *  
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _55?: StateStatus_55Enum;
    /**
     * **WiFi signal strength in bars**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _56?: number;
    /**
     * **The number of hilights in encoding video (set to 0 when encoding stops)**
     * 
     * 
     * 
     * Supported Cameras:
     *  
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _58?: number;
    /**
     * **Time since boot (msec) of most recent hilight in encoding video (set to 0 when encoding stops)**
     *  
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _59?: number;
    /**
     * **The min time between camera status updates (msec). Do not poll for status more often than this**
     *  
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _60?: number;
    /**
     * **How many min of Timelapse video can be captured with current settings before sdcard is full**
     *  
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _64?: number;
    /**
     * **Liveview Exposure Select Mode**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Disabled |
     * | 1 | Auto |
     * | 2 | ISO Lock |
     * | 3 | Hemisphere |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _65?: StateStatus_65Enum;
    /**
     * **Liveview Exposure Select: y-coordinate (percent)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _66?: number;
    /**
     * **Liveview Exposure Select: y-coordinate (percent)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _67?: number;
    /**
     * **Does the camera currently have a GPS lock?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _68?: StateStatus_68Enum;
    /**
     * **Is the camera in AP Mode?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _69?: StateStatus_69Enum;
    /**
     * **Internal battery level (percent)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _70?: number;
    /**
     * **Microphone Accesstory (Garter) status**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Garter not connected |
     * | 1 | Garter connected |
     * | 2 | Garter connected and microphone plugged into Garter |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _74?: StateStatus_74Enum;
    /**
     * **Digital Zoom level (percent)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _75?: number;
    /**
     * **Wireless Band**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | 2.4 GHz |
     * | 1 | 5 GHz |
     * | 2 | Max |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _76?: StateStatus_76Enum;
    /**
     * **Is Digital Zoom feature available?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _77?: StateStatus_77Enum;
    /**
     * **Are current video settings mobile friendly? (related to video compression and frame rate)**
     *  
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _78?: StateStatus_78Enum;
    /**
     * **Is the camera currently in First Time Use (FTU) UI flow?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _79?: StateStatus_79Enum;
    /**
     * **Is 5GHz wireless band available?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _81?: StateStatus_81Enum;
    /**
     * **Is the system ready to accept commands?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _82?: StateStatus_82Enum;
    /**
     * **Is the internal battery charged sufficiently to start Over The Air (OTA) update?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _83?: StateStatus_83Enum;
    /**
     * **Is the camera getting too cold to continue recording?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _85?: StateStatus_85Enum;
    /**
     * **The rotational orientation of the camera**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | 0 degrees (upright) |
     * | 1 | 180 degrees (upside down) |
     * | 2 | 90 degrees (laying on right side) |
     *  | 3 | 270 degrees (laying on left side) |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _86?: StateStatus_86Enum;
    /**
     * **Is this camera capable of zooming while encoding (static value based on model, not settings)**
     *  
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _88?: StateStatus_88Enum;
    /**
     * **Current flatmode ID**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _89?: number;
    /**
     * **Current Video Preset (ID)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _93?: number;
    /**
     * **Current Photo Preset (ID)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     *  - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _94?: number;
    /**
     * **Current Timelapse Preset (ID)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _95?: number;
    /**
     * **Current Preset Group (ID) (corresponds to ui_mode_groups in settings.json)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _96?: number;
    /**
     * **Current Preset (ID)**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _97?: number;
    /**
     * **Preset Modified Status, which contains an event ID and a preset (group) ID**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _98?: number;
    /**
     * **How many Live Bursts can be captured before sdcard is full**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _99?: number;
    /**
     * **Total number of Live Bursts on sdcard**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _100?: number;
    /**
     * **Is Capture Delay currently active (i.e. counting down)?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _101?: StateStatus_101Enum;
    /**
     * **Borg State**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Borg microphone removed |
     *  | 2 | Borg microphone only |
     * | 3 | Borg microphone with external microphone |
     * 
     * 
     * Supported Cameras:
     * 
     *  
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _102?: StateStatus_102Enum;
    /**
     * **Time Warp Speed**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | 15x |
     * | 1 | 30x |
     *  | 2 | 60x |
     * | 3 | 150x |
     * | 4 | 300x |
     * | 5 | 900x |
     * | 6 | 1800x |
     * | 7 | 2x |
     * | 8 | 5x |
     * | 9 | 10x |
     *  | 10 | Auto |
     * | 11 | 1x (realtime) |
     * | 12 | 1/2x (slow-motion) |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _103?: StateStatus_103Enum;
    /**
     * **Is the system's Linux core active?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _104?: StateStatus_104Enum;
    /**
     * **Camera lens type (reflects changes to setting 162 or setting 189)**
     * 
     * 
     * | Value | Meaning |
     *  | ----- | ------- |
     * | 0 | Default |
     * | 1 | Max Lens |
     * | 2 | Max Lens 2.0 |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     *  - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _105?: StateStatus_105Enum;
    /**
     * **Is Video Hindsight Capture Active?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _106?: StateStatus_106Enum;
    /**
     * **Scheduled Capture Preset ID**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     *  - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _107?: number;
    /**
     * **Is Scheduled Capture set?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     *  - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _108?: StateStatus_108Enum;
    /**
     * **Media Mode Status (bitmasked)**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | 000 = Headroom: 0, HDMI: 0, Media Mod Connected: False |
     * | 1 | 001 = Headroom: 0, HDMI: 0, Media Mod Connected: True |
     *  | 2 | 010 = Headroom: 0, HDMI: 1, Media Mod Connected: False |
     * | 3 | 011 = Headroom: 0, HDMI: 1, Media Mod Connected: True |
     * | 4 | 100 = Headroom: 1, HDMI: 0, Media Mod Connected: False |
     * | 5 | 101 = Headroom: 1, HDMI: 0, Media Mod Connected: True |
     * | 6 | 110 = Headroom: 1, HDMI: 1, Media Mod Connected: False |
     * | 7 | 111 = Headroom: 1, HDMI: 1, Media Mod Connected: True |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _110?: StateStatus_110Enum;
    /**
     * **Does sdcard meet specified minimum write speed?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     *  - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * @type {number}
     * @memberof StateStatus
     */
    _111?: StateStatus_111Enum;
    /**
     * **Number of sdcard write speed errors since device booted**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * @type {number}
     * @memberof StateStatus
     */
    _112?: number;
    /**
     * **Is Turbo Transfer active?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     *  - HERO11 Black
     * - HERO10 Black
     * - HERO9 Black
     * @type {number}
     * @memberof StateStatus
     */
    _113?: StateStatus_113Enum;
    /**
     * **Camera control status ID**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Camera Idle: No one is attempting to change camera settings |
     * | 1 | Camera Control: Camera is in a menu or changing settings. To intervene, app must request control |
     * | 2 | Camera External Control: An outside entity (app) has control and is in a menu or modifying settings |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     *  - HERO11 Black
     * - HERO10 Black
     * @type {number}
     * @memberof StateStatus
     */
    _114?: StateStatus_114Enum;
    /**
     * **Is the camera connected to a PC via USB?**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * @type {number}
     * @memberof StateStatus
     */
    _115?: StateStatus_115Enum;
    /**
     * **Camera control over USB state**
     * 
     * 
     * | Value | Meaning |
     * | ----- | ------- |
     * | 0 | Disabled |
     * | 1 | Enabled |
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * - HERO10 Black
     * @type {number}
     * @memberof StateStatus
     */
    _116?: StateStatus_116Enum;
    /**
     * **Total SD card capacity in Kilobytes**
     * 
     * 
     * 
     * Supported Cameras:
     * 
     * 
     * - HERO12 Black
     * - HERO11 Black Mini
     * - HERO11 Black
     * @type {number}
     * @memberof StateStatus
     */
    _117?: number;
}


/**
 * @export
 */
export const StateStatus_1Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_1Enum = typeof StateStatus_1Enum[keyof typeof StateStatus_1Enum];

/**
 * @export
 */
export const StateStatus_2Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type StateStatus_2Enum = typeof StateStatus_2Enum[keyof typeof StateStatus_2Enum];

/**
 * @export
 */
export const StateStatus_6Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_6Enum = typeof StateStatus_6Enum[keyof typeof StateStatus_6Enum];

/**
 * @export
 */
export const StateStatus_8Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_8Enum = typeof StateStatus_8Enum[keyof typeof StateStatus_8Enum];

/**
 * @export
 */
export const StateStatus_9Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_9Enum = typeof StateStatus_9Enum[keyof typeof StateStatus_9Enum];

/**
 * @export
 */
export const StateStatus_10Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_10Enum = typeof StateStatus_10Enum[keyof typeof StateStatus_10Enum];

/**
 * @export
 */
export const StateStatus_11Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_11Enum = typeof StateStatus_11Enum[keyof typeof StateStatus_11Enum];

/**
 * @export
 */
export const StateStatus_17Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_17Enum = typeof StateStatus_17Enum[keyof typeof StateStatus_17Enum];

/**
 * @export
 */
export const StateStatus_19Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4
} as const;
export type StateStatus_19Enum = typeof StateStatus_19Enum[keyof typeof StateStatus_19Enum];

/**
 * @export
 */
export const StateStatus_20Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type StateStatus_20Enum = typeof StateStatus_20Enum[keyof typeof StateStatus_20Enum];

/**
 * @export
 */
export const StateStatus_22Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4
} as const;
export type StateStatus_22Enum = typeof StateStatus_22Enum[keyof typeof StateStatus_22Enum];

/**
 * @export
 */
export const StateStatus_24Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4
} as const;
export type StateStatus_24Enum = typeof StateStatus_24Enum[keyof typeof StateStatus_24Enum];

/**
 * @export
 */
export const StateStatus_27Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_27Enum = typeof StateStatus_27Enum[keyof typeof StateStatus_27Enum];

/**
 * @export
 */
export const StateStatus_32Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_32Enum = typeof StateStatus_32Enum[keyof typeof StateStatus_32Enum];

/**
 * @export
 */
export const StateStatus_33Enum = {
    NUMBER_MINUS_1: -1,
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_8: 8
} as const;
export type StateStatus_33Enum = typeof StateStatus_33Enum[keyof typeof StateStatus_33Enum];

/**
 * @export
 */
export const StateStatus_41Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5,
    NUMBER_6: 6,
    NUMBER_7: 7,
    NUMBER_8: 8,
    NUMBER_9: 9,
    NUMBER_10: 10
} as const;
export type StateStatus_41Enum = typeof StateStatus_41Enum[keyof typeof StateStatus_41Enum];

/**
 * @export
 */
export const StateStatus_42Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_42Enum = typeof StateStatus_42Enum[keyof typeof StateStatus_42Enum];

/**
 * @export
 */
export const StateStatus_45Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_45Enum = typeof StateStatus_45Enum[keyof typeof StateStatus_45Enum];

/**
 * @export
 */
export const StateStatus_55Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_55Enum = typeof StateStatus_55Enum[keyof typeof StateStatus_55Enum];

/**
 * @export
 */
export const StateStatus_65Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type StateStatus_65Enum = typeof StateStatus_65Enum[keyof typeof StateStatus_65Enum];

/**
 * @export
 */
export const StateStatus_68Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_68Enum = typeof StateStatus_68Enum[keyof typeof StateStatus_68Enum];

/**
 * @export
 */
export const StateStatus_69Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_69Enum = typeof StateStatus_69Enum[keyof typeof StateStatus_69Enum];

/**
 * @export
 */
export const StateStatus_74Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type StateStatus_74Enum = typeof StateStatus_74Enum[keyof typeof StateStatus_74Enum];

/**
 * @export
 */
export const StateStatus_76Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type StateStatus_76Enum = typeof StateStatus_76Enum[keyof typeof StateStatus_76Enum];

/**
 * @export
 */
export const StateStatus_77Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_77Enum = typeof StateStatus_77Enum[keyof typeof StateStatus_77Enum];

/**
 * @export
 */
export const StateStatus_78Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_78Enum = typeof StateStatus_78Enum[keyof typeof StateStatus_78Enum];

/**
 * @export
 */
export const StateStatus_79Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_79Enum = typeof StateStatus_79Enum[keyof typeof StateStatus_79Enum];

/**
 * @export
 */
export const StateStatus_81Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_81Enum = typeof StateStatus_81Enum[keyof typeof StateStatus_81Enum];

/**
 * @export
 */
export const StateStatus_82Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_82Enum = typeof StateStatus_82Enum[keyof typeof StateStatus_82Enum];

/**
 * @export
 */
export const StateStatus_83Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_83Enum = typeof StateStatus_83Enum[keyof typeof StateStatus_83Enum];

/**
 * @export
 */
export const StateStatus_85Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_85Enum = typeof StateStatus_85Enum[keyof typeof StateStatus_85Enum];

/**
 * @export
 */
export const StateStatus_86Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type StateStatus_86Enum = typeof StateStatus_86Enum[keyof typeof StateStatus_86Enum];

/**
 * @export
 */
export const StateStatus_88Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_88Enum = typeof StateStatus_88Enum[keyof typeof StateStatus_88Enum];

/**
 * @export
 */
export const StateStatus_101Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_101Enum = typeof StateStatus_101Enum[keyof typeof StateStatus_101Enum];

/**
 * @export
 */
export const StateStatus_102Enum = {
    NUMBER_0: 0,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type StateStatus_102Enum = typeof StateStatus_102Enum[keyof typeof StateStatus_102Enum];

/**
 * @export
 */
export const StateStatus_103Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5,
    NUMBER_6: 6,
    NUMBER_7: 7,
    NUMBER_8: 8,
    NUMBER_9: 9,
    NUMBER_10: 10,
    NUMBER_11: 11,
    NUMBER_12: 12
} as const;
export type StateStatus_103Enum = typeof StateStatus_103Enum[keyof typeof StateStatus_103Enum];

/**
 * @export
 */
export const StateStatus_104Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_104Enum = typeof StateStatus_104Enum[keyof typeof StateStatus_104Enum];

/**
 * @export
 */
export const StateStatus_105Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type StateStatus_105Enum = typeof StateStatus_105Enum[keyof typeof StateStatus_105Enum];

/**
 * @export
 */
export const StateStatus_106Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_106Enum = typeof StateStatus_106Enum[keyof typeof StateStatus_106Enum];

/**
 * @export
 */
export const StateStatus_108Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_108Enum = typeof StateStatus_108Enum[keyof typeof StateStatus_108Enum];

/**
 * @export
 */
export const StateStatus_110Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5,
    NUMBER_6: 6,
    NUMBER_7: 7
} as const;
export type StateStatus_110Enum = typeof StateStatus_110Enum[keyof typeof StateStatus_110Enum];

/**
 * @export
 */
export const StateStatus_111Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_111Enum = typeof StateStatus_111Enum[keyof typeof StateStatus_111Enum];

/**
 * @export
 */
export const StateStatus_113Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_113Enum = typeof StateStatus_113Enum[keyof typeof StateStatus_113Enum];

/**
 * @export
 */
export const StateStatus_114Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type StateStatus_114Enum = typeof StateStatus_114Enum[keyof typeof StateStatus_114Enum];

/**
 * @export
 */
export const StateStatus_115Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_115Enum = typeof StateStatus_115Enum[keyof typeof StateStatus_115Enum];

/**
 * @export
 */
export const StateStatus_116Enum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type StateStatus_116Enum = typeof StateStatus_116Enum[keyof typeof StateStatus_116Enum];


/**
 * Check if a given object implements the StateStatus interface.
 */
export function instanceOfStateStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StateStatusFromJSON(json: any): StateStatus {
    return StateStatusFromJSONTyped(json, false);
}

export function StateStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_1': !exists(json, '1') ? undefined : json['1'],
        '_2': !exists(json, '2') ? undefined : json['2'],
        '_6': !exists(json, '6') ? undefined : json['6'],
        '_8': !exists(json, '8') ? undefined : json['8'],
        '_9': !exists(json, '9') ? undefined : json['9'],
        '_10': !exists(json, '10') ? undefined : json['10'],
        '_11': !exists(json, '11') ? undefined : json['11'],
        '_13': !exists(json, '13') ? undefined : json['13'],
        '_17': !exists(json, '17') ? undefined : json['17'],
        '_19': !exists(json, '19') ? undefined : json['19'],
        '_20': !exists(json, '20') ? undefined : json['20'],
        '_21': !exists(json, '21') ? undefined : json['21'],
        '_22': !exists(json, '22') ? undefined : json['22'],
        '_23': !exists(json, '23') ? undefined : json['23'],
        '_24': !exists(json, '24') ? undefined : json['24'],
        '_26': !exists(json, '26') ? undefined : json['26'],
        '_27': !exists(json, '27') ? undefined : json['27'],
        '_28': !exists(json, '28') ? undefined : json['28'],
        '_29': !exists(json, '29') ? undefined : json['29'],
        '_30': !exists(json, '30') ? undefined : json['30'],
        '_31': !exists(json, '31') ? undefined : json['31'],
        '_32': !exists(json, '32') ? undefined : json['32'],
        '_33': !exists(json, '33') ? undefined : json['33'],
        '_34': !exists(json, '34') ? undefined : json['34'],
        '_35': !exists(json, '35') ? undefined : json['35'],
        '_38': !exists(json, '38') ? undefined : json['38'],
        '_39': !exists(json, '39') ? undefined : json['39'],
        '_41': !exists(json, '41') ? undefined : json['41'],
        '_42': !exists(json, '42') ? undefined : json['42'],
        '_45': !exists(json, '45') ? undefined : json['45'],
        '_49': !exists(json, '49') ? undefined : json['49'],
        '_54': !exists(json, '54') ? undefined : json['54'],
        '_55': !exists(json, '55') ? undefined : json['55'],
        '_56': !exists(json, '56') ? undefined : json['56'],
        '_58': !exists(json, '58') ? undefined : json['58'],
        '_59': !exists(json, '59') ? undefined : json['59'],
        '_60': !exists(json, '60') ? undefined : json['60'],
        '_64': !exists(json, '64') ? undefined : json['64'],
        '_65': !exists(json, '65') ? undefined : json['65'],
        '_66': !exists(json, '66') ? undefined : json['66'],
        '_67': !exists(json, '67') ? undefined : json['67'],
        '_68': !exists(json, '68') ? undefined : json['68'],
        '_69': !exists(json, '69') ? undefined : json['69'],
        '_70': !exists(json, '70') ? undefined : json['70'],
        '_74': !exists(json, '74') ? undefined : json['74'],
        '_75': !exists(json, '75') ? undefined : json['75'],
        '_76': !exists(json, '76') ? undefined : json['76'],
        '_77': !exists(json, '77') ? undefined : json['77'],
        '_78': !exists(json, '78') ? undefined : json['78'],
        '_79': !exists(json, '79') ? undefined : json['79'],
        '_81': !exists(json, '81') ? undefined : json['81'],
        '_82': !exists(json, '82') ? undefined : json['82'],
        '_83': !exists(json, '83') ? undefined : json['83'],
        '_85': !exists(json, '85') ? undefined : json['85'],
        '_86': !exists(json, '86') ? undefined : json['86'],
        '_88': !exists(json, '88') ? undefined : json['88'],
        '_89': !exists(json, '89') ? undefined : json['89'],
        '_93': !exists(json, '93') ? undefined : json['93'],
        '_94': !exists(json, '94') ? undefined : json['94'],
        '_95': !exists(json, '95') ? undefined : json['95'],
        '_96': !exists(json, '96') ? undefined : json['96'],
        '_97': !exists(json, '97') ? undefined : json['97'],
        '_98': !exists(json, '98') ? undefined : json['98'],
        '_99': !exists(json, '99') ? undefined : json['99'],
        '_100': !exists(json, '100') ? undefined : json['100'],
        '_101': !exists(json, '101') ? undefined : json['101'],
        '_102': !exists(json, '102') ? undefined : json['102'],
        '_103': !exists(json, '103') ? undefined : json['103'],
        '_104': !exists(json, '104') ? undefined : json['104'],
        '_105': !exists(json, '105') ? undefined : json['105'],
        '_106': !exists(json, '106') ? undefined : json['106'],
        '_107': !exists(json, '107') ? undefined : json['107'],
        '_108': !exists(json, '108') ? undefined : json['108'],
        '_110': !exists(json, '110') ? undefined : json['110'],
        '_111': !exists(json, '111') ? undefined : json['111'],
        '_112': !exists(json, '112') ? undefined : json['112'],
        '_113': !exists(json, '113') ? undefined : json['113'],
        '_114': !exists(json, '114') ? undefined : json['114'],
        '_115': !exists(json, '115') ? undefined : json['115'],
        '_116': !exists(json, '116') ? undefined : json['116'],
        '_117': !exists(json, '117') ? undefined : json['117'],
    };
}

export function StateStatusToJSON(value?: StateStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '1': value._1,
        '2': value._2,
        '6': value._6,
        '8': value._8,
        '9': value._9,
        '10': value._10,
        '11': value._11,
        '13': value._13,
        '17': value._17,
        '19': value._19,
        '20': value._20,
        '21': value._21,
        '22': value._22,
        '23': value._23,
        '24': value._24,
        '26': value._26,
        '27': value._27,
        '28': value._28,
        '29': value._29,
        '30': value._30,
        '31': value._31,
        '32': value._32,
        '33': value._33,
        '34': value._34,
        '35': value._35,
        '38': value._38,
        '39': value._39,
        '41': value._41,
        '42': value._42,
        '45': value._45,
        '49': value._49,
        '54': value._54,
        '55': value._55,
        '56': value._56,
        '58': value._58,
        '59': value._59,
        '60': value._60,
        '64': value._64,
        '65': value._65,
        '66': value._66,
        '67': value._67,
        '68': value._68,
        '69': value._69,
        '70': value._70,
        '74': value._74,
        '75': value._75,
        '76': value._76,
        '77': value._77,
        '78': value._78,
        '79': value._79,
        '81': value._81,
        '82': value._82,
        '83': value._83,
        '85': value._85,
        '86': value._86,
        '88': value._88,
        '89': value._89,
        '93': value._93,
        '94': value._94,
        '95': value._95,
        '96': value._96,
        '97': value._97,
        '98': value._98,
        '99': value._99,
        '100': value._100,
        '101': value._101,
        '102': value._102,
        '103': value._103,
        '104': value._104,
        '105': value._105,
        '106': value._106,
        '107': value._107,
        '108': value._108,
        '110': value._110,
        '111': value._111,
        '112': value._112,
        '113': value._113,
        '114': value._114,
        '115': value._115,
        '116': value._116,
        '117': value._117,
    };
}

