/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GPCAMERAGETHOMENETWORKSTATUS200Response
 */
export interface GPCAMERAGETHOMENETWORKSTATUS200Response {
    /**
     * Is COHN currently enabled?
     * @type {number}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    enabled?: GPCAMERAGETHOMENETWORKSTATUS200ResponseEnabledEnum;
    /**
     * Camera's IP address on the local network
     * @type {string}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    ipaddress?: string;
    /**
     * MAC address of the wifi adapter
     * @type {string}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    macaddress?: string;
    /**
     * Password used for http basic auth header
     * @type {string}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    password?: string;
    /**
     * Currently connected SSID
     * @type {string}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    ssid?: string;
    /**
     * | ID | Name | Summary |
     * | -- | ---- | ------- |
     * | 0 | COHN_STATE_Init |  |
     * | 1 | COHN_STATE_Error |  |
     * | 2 | COHN_STATE_Exit |  |
     * | 5 | COHN_STATE_Idle |  |
     * | 27 | COHN_STATE_NetworkConnected |  |
     * | 28 | COHN_STATE_NetworkDisconnected |  |
     * | 29 | COHN_STATE_ConnectingToNetwork |  |
     * | 30 | COHN_STATE_Invalid |  |
     * @type {number}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    state?: GPCAMERAGETHOMENETWORKSTATUS200ResponseStateEnum;
    /**
     * | ID | Name | Summary |
     * | -- | ---- | ------- |
     * | 0 | COHN_UNPROVISIONED |  |
     * | 1 | COHN_PROVISIONED |  |
     * @type {number}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    status?: GPCAMERAGETHOMENETWORKSTATUS200ResponseStatusEnum;
    /**
     * Username used for http basic auth header
     * @type {string}
     * @memberof GPCAMERAGETHOMENETWORKSTATUS200Response
     */
    username?: string;
}


/**
 * @export
 */
export const GPCAMERAGETHOMENETWORKSTATUS200ResponseEnabledEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type GPCAMERAGETHOMENETWORKSTATUS200ResponseEnabledEnum = typeof GPCAMERAGETHOMENETWORKSTATUS200ResponseEnabledEnum[keyof typeof GPCAMERAGETHOMENETWORKSTATUS200ResponseEnabledEnum];

/**
 * @export
 */
export const GPCAMERAGETHOMENETWORKSTATUS200ResponseStateEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_5: 5,
    NUMBER_27: 27,
    NUMBER_28: 28,
    NUMBER_29: 29,
    NUMBER_30: 30
} as const;
export type GPCAMERAGETHOMENETWORKSTATUS200ResponseStateEnum = typeof GPCAMERAGETHOMENETWORKSTATUS200ResponseStateEnum[keyof typeof GPCAMERAGETHOMENETWORKSTATUS200ResponseStateEnum];

/**
 * @export
 */
export const GPCAMERAGETHOMENETWORKSTATUS200ResponseStatusEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type GPCAMERAGETHOMENETWORKSTATUS200ResponseStatusEnum = typeof GPCAMERAGETHOMENETWORKSTATUS200ResponseStatusEnum[keyof typeof GPCAMERAGETHOMENETWORKSTATUS200ResponseStatusEnum];


/**
 * Check if a given object implements the GPCAMERAGETHOMENETWORKSTATUS200Response interface.
 */
export function instanceOfGPCAMERAGETHOMENETWORKSTATUS200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GPCAMERAGETHOMENETWORKSTATUS200ResponseFromJSON(json: any): GPCAMERAGETHOMENETWORKSTATUS200Response {
    return GPCAMERAGETHOMENETWORKSTATUS200ResponseFromJSONTyped(json, false);
}

export function GPCAMERAGETHOMENETWORKSTATUS200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GPCAMERAGETHOMENETWORKSTATUS200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'ipaddress': !exists(json, 'ipaddress') ? undefined : json['ipaddress'],
        'macaddress': !exists(json, 'macaddress') ? undefined : json['macaddress'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'ssid': !exists(json, 'ssid') ? undefined : json['ssid'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'username': !exists(json, 'username') ? undefined : json['username'],
    };
}

export function GPCAMERAGETHOMENETWORKSTATUS200ResponseToJSON(value?: GPCAMERAGETHOMENETWORKSTATUS200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'ipaddress': value.ipaddress,
        'macaddress': value.macaddress,
        'password': value.password,
        'ssid': value.ssid,
        'state': value.state,
        'status': value.status,
        'username': value.username,
    };
}

