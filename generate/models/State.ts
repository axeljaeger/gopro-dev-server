/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { StateSettings } from './StateSettings.js';
import {
    StateSettingsFromJSON,
    StateSettingsFromJSONTyped,
    StateSettingsToJSON,
} from './StateSettings.js';
import type { StateStatus } from './StateStatus.js';
import {
    StateStatusFromJSON,
    StateStatusFromJSONTyped,
    StateStatusToJSON,
} from './StateStatus.js';

/**
 * All settings and statuses
 * @export
 * @interface State
 */
export interface State {
    /**
     * 
     * @type {StateSettings}
     * @memberof State
     */
    settings?: StateSettings;
    /**
     * 
     * @type {StateStatus}
     * @memberof State
     */
    status?: StateStatus;
}

/**
 * Check if a given object implements the State interface.
 */
export function instanceOfState(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StateFromJSON(json: any): State {
    return StateFromJSONTyped(json, false);
}

export function StateFromJSONTyped(json: any, ignoreDiscriminator: boolean): State {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'settings': !exists(json, 'settings') ? undefined : StateSettingsFromJSON(json['settings']),
        'status': !exists(json, 'status') ? undefined : StateStatusFromJSON(json['status']),
    };
}

export function StateToJSON(value?: State | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'settings': StateSettingsToJSON(value.settings),
        'status': StateStatusToJSON(value.status),
    };
}

