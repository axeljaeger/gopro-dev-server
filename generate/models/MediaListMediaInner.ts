/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { MediaListMediaInnerFsInner } from './MediaListMediaInnerFsInner.js';
import {
    MediaListMediaInnerFsInnerFromJSON,
    MediaListMediaInnerFsInnerFromJSONTyped,
    MediaListMediaInnerFsInnerToJSON,
} from './MediaListMediaInnerFsInner.js';

/**
 * 
 * @export
 * @interface MediaListMediaInner
 */
export interface MediaListMediaInner {
    /**
     * directory that the media files reside in
     * @type {string}
     * @memberof MediaListMediaInner
     */
    d: string;
    /**
     * list of files
     * @type {Array<MediaListMediaInnerFsInner>}
     * @memberof MediaListMediaInner
     */
    fs: Array<MediaListMediaInnerFsInner>;
}

/**
 * Check if a given object implements the MediaListMediaInner interface.
 */
export function instanceOfMediaListMediaInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "d" in value;
    isInstance = isInstance && "fs" in value;

    return isInstance;
}

export function MediaListMediaInnerFromJSON(json: any): MediaListMediaInner {
    return MediaListMediaInnerFromJSONTyped(json, false);
}

export function MediaListMediaInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaListMediaInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'd': json['d'],
        'fs': ((json['fs'] as Array<any>).map(MediaListMediaInnerFsInnerFromJSON)),
    };
}

export function MediaListMediaInnerToJSON(value?: MediaListMediaInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'd': value.d,
        'fs': ((value.fs as Array<any>).map(MediaListMediaInnerFsInnerToJSON)),
    };
}

