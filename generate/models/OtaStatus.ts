/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * OTA Status
 * 
 * | ID | Status | Description |
 * | -- | ------ | ----------- |
 * | 0 | OK | No errors occurred |
 * | 1 | Unknown Request | Server did not recognize the request |
 * | 2 | Bad Params | Parameter values not recognized |
 * | 3 | SHA1 Send Mismatch | SHA1 for chunk did not match SHA1 of previous chunk(s) |
 * | 4 | SHA1 Calculated Mismatch | Calculated SHA1 did not match user-specified SHA1 |
 * | 5 | HTTP Boundary Error | HTTP Post was malformed |
 * | 6 | HTTP Post Error | Unexpected HTTP / Post Content Type |
 * | 7 | Server Busy | HTTP server is busy |
 * | 8 | Offset Mismatch | Attempt to upload chunk with offset that did not align with previous chunk |
 * | 9 | Bad Post Data | Server failed to parse POST data |
 * | 10 | File Incomplete | Tried to start update before server finished validating .zip file |
 * | 11 | Update in progress | Firmware update is in progress |
 * | 12 | Insufficient Space | Insufficient space on the sdcard to hold decompressed update file |
 * 
 * @export
 */
export const OtaStatus = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5,
    NUMBER_6: 6,
    NUMBER_7: 7,
    NUMBER_8: 8,
    NUMBER_9: 9,
    NUMBER_10: 10,
    NUMBER_11: 11,
    NUMBER_12: 12
} as const;
export type OtaStatus = typeof OtaStatus[keyof typeof OtaStatus];


export function OtaStatusFromJSON(json: any): OtaStatus {
    return OtaStatusFromJSONTyped(json, false);
}

export function OtaStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): OtaStatus {
    return json as OtaStatus;
}

export function OtaStatusToJSON(value?: OtaStatus | null): any {
    return value as any;
}

