/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * An individual preset setting that forms the preset's setting array
 * @export
 * @interface PresetSetting
 */
export interface PresetSetting {
    /**
     * Setting identifier
     * @type {number}
     * @memberof PresetSetting
     */
    id?: number;
    /**
     * Does this setting appear on the Preset "pill" in the camera UI?
     * @type {boolean}
     * @memberof PresetSetting
     */
    isCaption?: boolean;
    /**
     * Setting value
     * @type {number}
     * @memberof PresetSetting
     */
    value?: number;
}

/**
 * Check if a given object implements the PresetSetting interface.
 */
export function instanceOfPresetSetting(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PresetSettingFromJSON(json: any): PresetSetting {
    return PresetSettingFromJSONTyped(json, false);
}

export function PresetSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): PresetSetting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isCaption': !exists(json, 'is_caption') ? undefined : json['is_caption'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function PresetSettingToJSON(value?: PresetSetting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'is_caption': value.isCaption,
        'value': value.value,
    };
}

