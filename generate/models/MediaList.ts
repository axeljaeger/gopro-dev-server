/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { MediaListMediaInner } from './MediaListMediaInner.js';
import {
    MediaListMediaInnerFromJSON,
    MediaListMediaInnerFromJSONTyped,
    MediaListMediaInnerToJSON,
} from './MediaListMediaInner.js';

/**
 * list of media file systems
 * @export
 * @interface MediaList
 */
export interface MediaList {
    /**
     * media list identifier
     * @type {string}
     * @memberof MediaList
     */
    id: string;
    /**
     * 
     * @type {Array<MediaListMediaInner>}
     * @memberof MediaList
     */
    media: Array<MediaListMediaInner>;
}

/**
 * Check if a given object implements the MediaList interface.
 */
export function instanceOfMediaList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "media" in value;

    return isInstance;
}

export function MediaListFromJSON(json: any): MediaList {
    return MediaListFromJSONTyped(json, false);
}

export function MediaListFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'media': ((json['media'] as Array<any>).map(MediaListMediaInnerFromJSON)),
    };
}

export function MediaListToJSON(value?: MediaList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'media': ((value.media as Array<any>).map(MediaListMediaInnerToJSON)),
    };
}

