/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GPCAMERASETHOMENETWORKSETTINGRequest
 */
export interface GPCAMERASETHOMENETWORKSETTINGRequest {
    /**
     * 1 to enable, 0 to disable
     * 
     * When `cohn_active` == 1, STA Mode connection will be dropped and camera will not
     * automatically re-connect for COHN.
     * 
     * @type {number}
     * @memberof GPCAMERASETHOMENETWORKSETTINGRequest
     */
    cohnActive?: GPCAMERASETHOMENETWORKSETTINGRequestCohnActiveEnum;
}


/**
 * @export
 */
export const GPCAMERASETHOMENETWORKSETTINGRequestCohnActiveEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type GPCAMERASETHOMENETWORKSETTINGRequestCohnActiveEnum = typeof GPCAMERASETHOMENETWORKSETTINGRequestCohnActiveEnum[keyof typeof GPCAMERASETHOMENETWORKSETTINGRequestCohnActiveEnum];


/**
 * Check if a given object implements the GPCAMERASETHOMENETWORKSETTINGRequest interface.
 */
export function instanceOfGPCAMERASETHOMENETWORKSETTINGRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GPCAMERASETHOMENETWORKSETTINGRequestFromJSON(json: any): GPCAMERASETHOMENETWORKSETTINGRequest {
    return GPCAMERASETHOMENETWORKSETTINGRequestFromJSONTyped(json, false);
}

export function GPCAMERASETHOMENETWORKSETTINGRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GPCAMERASETHOMENETWORKSETTINGRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cohnActive': !exists(json, 'cohn_active') ? undefined : json['cohn_active'],
    };
}

export function GPCAMERASETHOMENETWORKSETTINGRequestToJSON(value?: GPCAMERASETHOMENETWORKSETTINGRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cohn_active': value.cohnActive,
    };
}

