/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface OGPGETDATETIME200Response
 */
export interface OGPGETDATETIME200Response {
    /**
     * current date in format YYYY_MM_DD
     * @type {string}
     * @memberof OGPGETDATETIME200Response
     */
    date: string;
    /**
     * Is daylight savings time active?
     * @type {number}
     * @memberof OGPGETDATETIME200Response
     */
    dst?: OGPGETDATETIME200ResponseDstEnum;
    /**
     * current time in format HH_MM_SS
     * @type {string}
     * @memberof OGPGETDATETIME200Response
     */
    time: string;
    /**
     * Timezone offset in minutes
     * @type {number}
     * @memberof OGPGETDATETIME200Response
     */
    tzone?: number;
}


/**
 * @export
 */
export const OGPGETDATETIME200ResponseDstEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type OGPGETDATETIME200ResponseDstEnum = typeof OGPGETDATETIME200ResponseDstEnum[keyof typeof OGPGETDATETIME200ResponseDstEnum];


/**
 * Check if a given object implements the OGPGETDATETIME200Response interface.
 */
export function instanceOfOGPGETDATETIME200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "time" in value;

    return isInstance;
}

export function OGPGETDATETIME200ResponseFromJSON(json: any): OGPGETDATETIME200Response {
    return OGPGETDATETIME200ResponseFromJSONTyped(json, false);
}

export function OGPGETDATETIME200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OGPGETDATETIME200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': json['date'],
        'dst': !exists(json, 'dst') ? undefined : json['dst'],
        'time': json['time'],
        'tzone': !exists(json, 'tzone') ? undefined : json['tzone'],
    };
}

export function OGPGETDATETIME200ResponseToJSON(value?: OGPGETDATETIME200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': value.date,
        'dst': value.dst,
        'time': value.time,
        'tzone': value.tzone,
    };
}

