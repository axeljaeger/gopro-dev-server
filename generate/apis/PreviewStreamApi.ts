/* tslint:disable */
/* eslint-disable */
/**
 * OpenGoPro HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';

export interface OGPPREVIEWSTREAMSTARTRequest {
    port?: number;
}

/**
 * 
 */
export class PreviewStreamApi extends runtime.BaseAPI {

    /**
     *   ---  Supported Cameras:   - HERO12 Black - HERO11 Black Mini - HERO11 Black - HERO10 Black  - HERO9 Black   ---  Supported Protocols:   - USB - WIFI 
     * Start the Preview Stream
     */
    async oGPPREVIEWSTREAMSTARTRaw(requestParameters: OGPPREVIEWSTREAMSTARTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        if (requestParameters.port !== undefined) {
            queryParameters['port'] = requestParameters.port;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/gopro/camera/stream/start`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     *   ---  Supported Cameras:   - HERO12 Black - HERO11 Black Mini - HERO11 Black - HERO10 Black  - HERO9 Black   ---  Supported Protocols:   - USB - WIFI 
     * Start the Preview Stream
     */
    async oGPPREVIEWSTREAMSTART(requestParameters: OGPPREVIEWSTREAMSTARTRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.oGPPREVIEWSTREAMSTARTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     *   ---  Supported Cameras:   - HERO12 Black - HERO11 Black Mini - HERO11 Black - HERO10 Black  - HERO9 Black   ---  Supported Protocols:   - USB - WIFI 
     * Stop the Preview Stream
     */
    async oGPPREVIEWSTREAMSTOPRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/gopro/camera/stream/stop`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     *   ---  Supported Cameras:   - HERO12 Black - HERO11 Black Mini - HERO11 Black - HERO10 Black  - HERO9 Black   ---  Supported Protocols:   - USB - WIFI 
     * Stop the Preview Stream
     */
    async oGPPREVIEWSTREAMSTOP(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.oGPPREVIEWSTREAMSTOPRaw(initOverrides);
        return await response.value();
    }

}
